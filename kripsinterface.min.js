//Enums
var blockType = {"square": 1, "rectLongWidth":2, "rectLongHeight":3};

var loaderTypes = {
    "spinner": 1,
    "fader":2
}



//Divs
$(document).ready(function () {


    var currentGlowDiv = -1;
    var noanimation = true;


    $(document).on('mouseover', '.glow-box', function () {

        var indexOfClass = getIndexOf($(this));
        if(currentGlowDiv !== indexOfClass){
            $('.glow-box').css('animation', 'glowBoxInverse 0.5s').css('box-shadow', '0px 0px 0px 0px black');
            $(this).css('animation', 'glowBox 0.5s').css('box-shadow', '1px 1px 50px -4px black');
            $(this).children('.mini-game-card-image').css('animation', 'card-image-resize 0.5s').css('max-height', '25vh');
            $(this).children('.card-text-hidden').css('animation', 'showObject 1s').css('opacity', 1).css('display', 'block').css('height', 'auto');
        }
    }).on('mouseout', '.glow-box', function () {
        if (!$(this).hasClass('glow-active')) {
            animated = true;
            $(this).css('animation', 'glowBoxInverse 0.5s').css('box-shadow', '0px 0px 0px 0px black');
            $(this).children('.mini-game-card-image').css('animation', 'card-image-resize-inverse 1s').css('max-height', '50vh');
            $(this).children('.card-text-hidden').css('animation', 'hideObject 0.5s').css('opacity', 0).css('display', 'block').css('height', '0px');
            animated = false;
        }
    }).on('click', '.glow-box', function () {
        var glowBoxes = $('.glow-box');
        var activeBox = 0;
        $.each(glowBoxes, function (index, value) {
            if ($(value).hasClass('glow-active')) {
                $(value).css('animation', 'glowBoxInverse 1s').css('box-shadow', '0.4px 0.4px 0.4px 0.4px black');
                $(value).removeClass('glow-active');
            }
        });
        $(this).addClass('glow-active');
    }).on('mouseover', '.raise-card', function(){
        $(this).css('animation', 'raiseCardFromCase 0.9s').css('margin-top', '36px').css('box-shadow', '0px 65px 130px -35px black');
    }).on('mouseleave', '.raise-card', function(){
        $(this).css('animation', 'dropCardInCase 0.9s').css('margin-top', '150px').css('box-shadow', '0px 65px 16px 4px black');
    });




    //Btns
    $(document).on('click', '.clickable', function () {
        var audio = document.getElementById("btn-audio");
        audio.play();
    });

    function getIndexOf(elem){
        var $t = $(elem);
        return $t.index();
    }

    $(document).on('mouseover', '.frame-holder', function(){

        var framesToShake = $(this).data('framestoshake');

        $(this).bind('mousewheel', function(e) {

            if(noanimation){
                noanimation = false;
                $('.'+framesToShake).css('animation', 'rotateFrame 1s ease-in-out');
                console.log('animated');
                setTimeout(function(){
                    $('.'+framesToShake).css('animation', 'none');
                    noanimation = true;
                },2000);
                return;
            }
            return;

        });
    })


    function getHeightOfObject(object, type){
        var height = 0;
        switch(type){
            case blockType.square:
                height = $(object).width();
                break;
            case blockType.rectLongHeight:
                height = $(object).width() *2;
                break;
            case blockType.rectLongWidth:
                height = $(object).width / 2;
                break;
        }

        $(object).css('height', height+'px');
    }

})


function fadeToPage(generalPageClass, currentPageClass, headerClass, headerTitle, speedInSeconds){
    switch(speedInSeconds){
        case undefined:
            $("."+generalPageClass).addClass('hidden');
            $("."+currentPageClass).removeClass('hidden');
            $("."+headerClass).text(headerTitle);
            break;
        default:
            var speedInMilliseconds = speedInSeconds * 1000;
            var fadeTime = speedInMilliseconds / 3;
            var transitionTime = speedInMilliseconds * (2/3);
            $("."+generalPageClass).fadeOut(fadeTime);
            setTimeout(function(){
                $("."+generalPageClass).fadeOut();
                $("."+currentPageClass).fadeIn(fadeTime);
            },transitionTime)
    }

}

function moveObject(objectClass, value, direction, speed){

    switch(direction){
        case 'top':
            $('.'+objectClass).animate({top: value}, speed);
            break;
        case 'left':
            $('.'+objectClass).animate({left: value}, speed);
            break;
        case 'right':
            $('.'+objectClass).animate({right: value}, speed);
            break;
        case 'bottom':
            $('.'+objectClass).animate({right: value}, speed);
            break;
    }

}

function animateObject(objectClass, cssAnimation, animationTime){
    $('.'+objectClass).css('animation', cssAnimation+' '+animationTime);
}

function toggleDisplay(classOfElement, status){
    switch(status){
        case true:
            $('.'+classOfElement).show();
            break;
        case false:
            $('.'+classOfElement).hide();
            break;
    }
}

function scrollToX(classOfBody, length, direction){
    var lengthIncrement = 0;
    switch(direction){
        case true:
            lengthIncrement = length;
            break;
        case false:
            lengthIncrement = -length;
            break;
    }

    var width = $('.'+classOfBody).width();
    var percentageLengthToMove = (lengthIncrement/100) * width;

        $('.'+classOfBody).animate({scrollLeft: '+='+percentageLengthToMove});

}


function copyToClipboard(text){
    // Create new element
    var el = document.createElement('textarea');
    // Set value (string to be copied)
    el.value = text;
    // Set non-editable to avoid focus and move outside of view
    el.setAttribute('readonly', '');
    el.style = {position: 'absolute', left: '-9999px'};
    document.body.appendChild(el);
    // Select text inside element
    el.select();
    // Copy text to clipboard
    document.execCommand('copy');
    // Remove temporary element
    document.body.removeChild(el);
}


function LimitNumberInput(evt){
    var charCode = (evt.which) ? evt.which : event.keyCode;

    if (
        //0~9
    charCode >= 48 && charCode <= 57 ||
    //number pad 0~9
    charCode >= 96 && charCode <= 105 ||
    //backspace
    charCode == 8 ||
    //tab
    charCode == 9 ||
    //enter
    charCode == 13 ||
    //left, right, delete..
    charCode >= 35 && charCode <= 46
    )
    {
        //make sure the new value below the limit;
        var limit = parseInt($(this).attr('max'));
        var min = parseInt($(this).attr('min'));

        if((parseInt(this.value+String.fromCharCode(charCode), 10) <= limit) && (parseInt(this.value+String.fromCharCode(charCode), 10) >= min))
            return true;
    }

    evt.preventDefault();
    evt.stopPropagation();

    return false;
}

function showLoader(loaderType){
    switch(loaderType){
        case loaderTypes.spinner:
            $('.loader-fader').hide();
            $('.loader-spinner').show();
            $('.loader-overlay').fadeIn(500);
            break;
        case loaderTypes.fader:
            $('.loader-spinner').hide();
            $('.loader-fader').show();
            $('.loader-overlay').fadeIn(500);
    }
}

function hideLoader(){
    $('.loader-overlay').fadeOut(500);
}

function fadeInContent(elementToFadeIn, fadeDuration){
    $(elementToFadeIn).animate({opacity: 1}, fadeDuration);
}

function fadeOutContent(elementToFadeOut, fadeDuration){
    $(elementToFadeOut).animate({opacity: 0}, fadeDuration);
}

function changeAttribute(element, attribute, value){
    $(element).hide();
    console.log("changedd");
}


